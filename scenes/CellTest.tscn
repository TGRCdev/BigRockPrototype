[gd_scene load_steps=11 format=2]

[sub_resource type="SpatialMaterial" id=1]
flags_unshaded = true
albedo_color = Color( 1, 0, 0, 1 )

[sub_resource type="GDScript" id=2]
script/source = "extends ImmediateGeometry

var colors = [
	Color.red,
	Color.green,
	Color.blue,
	Color.yellow
]

var lines = [[0, 1], [1, 3], [2, 3], [2, 0], [4, 5], [5, 7], [6, 7], [6, 4], [0, 4], [1, 5], [2, 6], [3, 7]];

func draw_cell(cell):
	clear();
	begin(Mesh.PRIMITIVE_LINES);
	_draw_cell_rec(cell);
	end();

func _draw_cell_rec(cell):
	for line in lines:
		add_vertex(cell.vertices[line[0]].position);
		add_vertex(cell.vertices[line[1]].position);
	
	if not cell.is_leaf():
		for child in cell.children:
			_draw_cell_rec(child);"

[sub_resource type="GDScript" id=3]
script/source = "extends Node

var cell;

onready var thread : Thread = Thread.new();
var thread_finished = false;

var Terrain = load(\"res://scripts/bigrock_pt/terrain.gd\");

func _ready():
	cell = Terrain.Cell.new();
	cell.init_verts();
	draw_cell();

func _process(delta):
	if thread.is_active() and thread_finished:
		thread.wait_to_finish();

func draw_cell():
	$\"..\"/ImmediateGeometry.draw_cell(cell);

func subdivide():
	thread.start(self, \"subdivide_thread\", {\"use_3d_cursor\" : $\"..\"/Panel/MarginContainer/VBoxContainer/CheckButton.pressed, \"pos\" : Vector3($\"../Panel/MarginContainer/VBoxContainer/3DCursor/X\".value, $\"../Panel/MarginContainer/VBoxContainer/3DCursor/Y\".value, $\"../Panel/MarginContainer/VBoxContainer/3DCursor/Z\".value)});

func subdivide_thread(userdata):
	thread_finished = false;
	_subdivide_rec(cell, userdata.use_3d_cursor, userdata.pos);
	draw_cell();
	thread_finished = true;

func _subdivide_rec(cell, use_3d_cursor, pos):
	if cell.is_leaf():
		Terrain.subdivide_cell(cell);
	else:
		if use_3d_cursor:
			_subdivide_rec(cell.children[cell.get_index_containing_pos(pos)], use_3d_cursor, pos);
		else:
			for child in cell.children:
				_subdivide_rec(child, use_3d_cursor, pos);

func undivide():
	thread.start(self, \"undivide_thread\");

func undivide_thread(userdata):
	thread_finished = false;
	_undivide_rec(cell);
	draw_cell();
	thread_finished = true;

func _undivide_rec(cell):
	if cell.is_leaf():
		return;
	if cell.children[0].is_leaf():
		Terrain.undivide_cell(cell);
	else:
		for child in cell.children:
			_undivide_rec(child);"

[sub_resource type="GDScript" id=10]
script/source = "extends Spatial

func _process(delta):
	self.rotation_degrees.y += 45 * delta;"

[sub_resource type="GDScript" id=4]
script/source = "extends Label

var start;

func _ready():
	start = OS.get_static_memory_usage();

func _process(delta):
	self.text = \"Static Mem: %d KB\" % [float(OS.get_static_memory_usage() - start) / 1000.0];"

[sub_resource type="GDScript" id=5]
script/source = "extends Button

export (NodePath) var cell_path;

func _pressed():
	if cell_path and get_node(cell_path):
		get_node(cell_path).subdivide();"

[sub_resource type="GDScript" id=6]
script/source = "extends Button

export (NodePath) var cell_path;

func _pressed():
	if cell_path and get_node(cell_path):
		get_node(cell_path).undivide();"

[sub_resource type="GDScript" id=7]
script/source = "extends CheckButton

func _toggled(value):
	$\"../3DCursor\".visible = value;
	$MeshInstance.visible = value;

func _ready():
	$\"../3DCursor/X\".connect(\"value_changed\", self, \"_val_changed\", [0]);
	$\"../3DCursor/Y\".connect(\"value_changed\", self, \"_val_changed\", [1]);
	$\"../3DCursor/Z\".connect(\"value_changed\", self, \"_val_changed\", [2]);

func _val_changed(value, index):
	$MeshInstance.transform.origin[index] = value;"

[sub_resource type="SpatialMaterial" id=8]
flags_transparent = true
flags_unshaded = true
albedo_color = Color( 0, 0, 1, 0.654902 )

[sub_resource type="SphereMesh" id=9]
material = SubResource( 8 )
radius = 0.063
height = 0.125

[node name="Root" type="Spatial"]

[node name="ImmediateGeometry" type="ImmediateGeometry" parent="."]
material_override = SubResource( 1 )
script = SubResource( 2 )

[node name="Cell" type="Node" parent="."]
script = SubResource( 3 )

[node name="CameraPivot" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 0.5, 0.5 )
script = SubResource( 10 )

[node name="Camera" type="Camera" parent="CameraPivot"]
transform = Transform( 1, 0, 0, 0, 0.906308, 0.422618, 0, -0.422618, 0.906308, 0, 0.633927, 1.35946 )

[node name="Panel" type="Panel" parent="."]
margin_right = 294.0
margin_bottom = 182.0

[node name="MarginContainer" type="MarginContainer" parent="Panel"]
anchor_right = 1.0
anchor_bottom = 1.0
custom_constants/margin_right = 10
custom_constants/margin_top = 10
custom_constants/margin_left = 10
custom_constants/margin_bottom = 10

[node name="VBoxContainer" type="VBoxContainer" parent="Panel/MarginContainer"]
margin_left = 10.0
margin_top = 10.0
margin_right = 285.0
margin_bottom = 172.0
custom_constants/separation = 10

[node name="StaticMem" type="Label" parent="Panel/MarginContainer/VBoxContainer"]
margin_right = 275.0
margin_bottom = 14.0
custom_colors/font_color = Color( 1, 0, 0, 1 )
text = "Static Mem"
script = SubResource( 4 )

[node name="Subdivide" type="Button" parent="Panel/MarginContainer/VBoxContainer"]
margin_top = 24.0
margin_right = 275.0
margin_bottom = 44.0
text = "Subdivide"
script = SubResource( 5 )
cell_path = NodePath("../../../../Cell")

[node name="Undivide" type="Button" parent="Panel/MarginContainer/VBoxContainer"]
margin_top = 54.0
margin_right = 275.0
margin_bottom = 74.0
text = "Undivide"
script = SubResource( 6 )
cell_path = NodePath("../../../../Cell")

[node name="CheckButton" type="CheckButton" parent="Panel/MarginContainer/VBoxContainer"]
margin_top = 84.0
margin_right = 275.0
margin_bottom = 124.0
text = "Use 3D Cursor"
script = SubResource( 7 )

[node name="MeshInstance" type="MeshInstance" parent="Panel/MarginContainer/VBoxContainer/CheckButton"]
visible = false
mesh = SubResource( 9 )
material/0 = null

[node name="3DCursor" type="HBoxContainer" parent="Panel/MarginContainer/VBoxContainer"]
visible = false
margin_top = 134.0
margin_right = 275.0
margin_bottom = 158.0

[node name="Label" type="Label" parent="Panel/MarginContainer/VBoxContainer/3DCursor"]
margin_top = 5.0
margin_right = 41.0
margin_bottom = 19.0
text = "Cursor"

[node name="X" type="SpinBox" parent="Panel/MarginContainer/VBoxContainer/3DCursor"]
margin_left = 45.0
margin_right = 119.0
margin_bottom = 24.0
max_value = 1.0
step = 0.01

[node name="Y" type="SpinBox" parent="Panel/MarginContainer/VBoxContainer/3DCursor"]
margin_left = 123.0
margin_right = 197.0
margin_bottom = 24.0
max_value = 1.0
step = 0.01

[node name="Z" type="SpinBox" parent="Panel/MarginContainer/VBoxContainer/3DCursor"]
margin_left = 201.0
margin_right = 275.0
margin_bottom = 24.0
max_value = 1.0
step = 0.01
